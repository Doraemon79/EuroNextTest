name: dockercompose5468712103796883580
services:
  app_db:
    container_name: app_db
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: casablanca
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      dev: null
    ports:
      - mode: ingress
        target: 5432
        published: "5433"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: app_data
        target: /var/opt/mssql/data
        volume: {}
  weatherforecastapi:
    build:
      context: C:\Repos\DockerTurorials\EuroNextTest
      dockerfile: WeatherForecastAPI/Dockerfile
    container_name: appdemo-service
    depends_on:
      app_db:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ASPNETCORE_URLS: http://+:80
      ConnectionStrings__DefaultConnection: User ID =sa;Password=casablanca;Server=host.docker.internal;Database=WeatherForecastsDb; Encrypt=false;Trusted_Connection=False;
    image: weatherforecastapi
    networks:
      dev: null
    ports:
      - mode: ingress
        target: 80
        published: "5009"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\ignle\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ignle\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
networks:
  dev:
    name: dockercompose5468712103796883580_dev
    driver: bridge
volumes:
  app_data:
    name: dockercompose5468712103796883580_app_data